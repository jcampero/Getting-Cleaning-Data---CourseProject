source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
run_analysis
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
run_analysis()
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
run_analysis()
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
run_analysis()
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
run_analysis()
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
test_dataset <- read.table(unz(temp, testdata_path))
train_dataset <- read.table(unz(temp, traindata_path))
unlink(temp)
test_dataset[1,]
test_dataset[1,1]
test_dataset[1,2]
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
run_analysis <- function() {
## Getting & Cleaning Data Course Project
##
## This script performs the following tasks:
##  1) Get/merges training/test data sets from the link
##      https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
##  2) Extracts the mean and standard deviation for each measurement
##  3) Renames the activities in the data set with descriptive activity names
##  4) Labels the data set with descriptive variable names
##  5) Creates a tidy data set with the average of each variable/activity/subject combination
## Step 1 - Get collected data from the above URL, store it in a temp zip file,
##          extract relevant data from it and store in the test & train datasets
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
testlabels_path <- "UCI\ HAR\ Dataset/test/y_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
trainlabels_path <- "UCI\ HAR\ Dataset/train/y_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
test_dataset <- read.table(unz(temp, testdata_path))
test_labels <- read.table(unz(temp, testlabels_path))
train_dataset <- read.table(unz(temp, traindata_path))
train_labels <- read.table(unz(temp, trainlabels_path))
unlink(temp)
}
## Getting & Cleaning Data Course Project
##
## This script performs the following tasks:
##  1) Get/merges training/test data sets from the link
##      https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
##  2) Extracts the mean and standard deviation for each measurement
##  3) Renames the activities in the data set with descriptive activity names
##  4) Labels the data set with descriptive variable names
##  5) Creates a tidy data set with the average of each variable/activity/subject combination
## Step 1 - Get collected data from the above URL, store it in a temp zip file,
##          extract relevant data from it and store in the test & train datasets
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
testlabels_path <- "UCI\ HAR\ Dataset/test/y_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
trainlabels_path <- "UCI\ HAR\ Dataset/train/y_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
test_dataset <- read.table(unz(temp, testdata_path))
test_labels <- read.table(unz(temp, testlabels_path))
train_dataset <- read.table(unz(temp, traindata_path))
train_labels <- read.table(unz(temp, trainlabels_path))
unlink(temp)
test_labels
test_labels == train_labels
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
testlabels_path <- "UCI\ HAR\ Dataset/test/y_test.txt"
testsubject_path <- "UCI\ HAR\ Dataset/test/subject_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
trainlabels_path <- "UCI\ HAR\ Dataset/train/y_train.txt"
trainsubject_path <- "UCI\ HAR\ Dataset/train/subject_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
test_dataset <- read.table(unz(temp, testdata_path))
test_labels <- read.table(unz(temp, testlabels_path))
test_subject <- read.table(unz(temp, testsubject_path))
train_dataset <- read.table(unz(temp, traindata_path))
train_labels <- read.table(unz(temp, trainlabels_path))
train_subject <- read.table(unz(temp, trainsubject_path))
unlink(temp)
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
activitylabels_path <- "UCI\ HAR\ Dataset/activity_labels.txt"
features_path <- "UCI\ HAR\ Dataset/test/features.txt"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
testlabels_path <- "UCI\ HAR\ Dataset/test/y_test.txt"
testsubject_path <- "UCI\ HAR\ Dataset/test/subject_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
trainlabels_path <- "UCI\ HAR\ Dataset/train/y_train.txt"
trainsubject_path <- "UCI\ HAR\ Dataset/train/subject_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
activity_labels <- read.table(unz(temp, activitylabels_path))
features <- read.table(unz(temp, features_path))
test_dataset <- read.table(unz(temp, testdata_path))
test_labels <- read.table(unz(temp, testlabels_path))
test_subject <- read.table(unz(temp, testsubject_path))
train_dataset <- read.table(unz(temp, traindata_path))
train_labels <- read.table(unz(temp, trainlabels_path))
train_subject <- read.table(unz(temp, trainsubject_path))
unlink(temp)
features
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
features <- read.table(unz(temp, features_path))
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
activitylabels_path <- "UCI\ HAR\ Dataset/activity_labels.txt"
features_path <- "UCI\ HAR\ Dataset/features.txt"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
testlabels_path <- "UCI\ HAR\ Dataset/test/y_test.txt"
testsubject_path <- "UCI\ HAR\ Dataset/test/subject_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
trainlabels_path <- "UCI\ HAR\ Dataset/train/y_train.txt"
trainsubject_path <- "UCI\ HAR\ Dataset/train/subject_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
activity_labels <- read.table(unz(temp, activitylabels_path))
features <- read.table(unz(temp, features_path))
test_dataset <- read.table(unz(temp, testdata_path))
test_labels <- read.table(unz(temp, testlabels_path))
test_subject <- read.table(unz(temp, testsubject_path))
train_dataset <- read.table(unz(temp, traindata_path))
train_labels <- read.table(unz(temp, trainlabels_path))
train_subject <- read.table(unz(temp, trainsubject_path))
unlink(temp)
features
activity_labels
test_subject
test_labels
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
activitylabels_path <- "UCI\ HAR\ Dataset/activity_labels.txt"
features_path <- "UCI\ HAR\ Dataset/features.txt"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
testlabels_path <- "UCI\ HAR\ Dataset/test/y_test.txt"
testsubject_path <- "UCI\ HAR\ Dataset/test/subject_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
trainlabels_path <- "UCI\ HAR\ Dataset/train/y_train.txt"
trainsubject_path <- "UCI\ HAR\ Dataset/train/subject_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
activity_labels <- read.table(unz(temp, activitylabels_path))
features <- read.table(unz(temp, features_path))
test_dataset <- read.table(unz(temp, testdata_path))
test_labels <- read.table(unz(temp, testlabels_path))
test_subject <- read.table(unz(temp, testsubject_path))
train_dataset <- read.table(unz(temp, traindata_path))
train_labels <- read.table(unz(temp, trainlabels_path))
train_subject <- read.table(unz(temp, trainsubject_path))
unlink(temp)
##          Once collected, construct the main dataset binding columns for each set
##          (subject + activity + data)
main_dataset <- rbind(cbind(test_subject,test_labels,test_dataset),
cbind(train_subject,train_labels,train_dataset))
features
cnames
names(main_dataset)
colnames(main_dataset) <- c("Subject","Activity",features[,2])
names(main_dataset)
features[,2]
features[1,2]
colnames(main_dataset) <- c("Subject","Activity",features[,2])
names(main_dataset)
features
features$V2
colnames(main_dataset) <- c("Subject","Activity",features$V2)
names(main_dataset)
features$V2
attr(features$V2)
gsub("-|\\()","",features$V2)
features$V2
gsub("-|\\()","",features$V2)
gsub("-|\\(|\\)","",features$V2)
gsub("-|\\(|\\)|,","",features$V2)
features$V2
gsub("-|\\(|\\)|,","",features$V2)
colnames(main_dataset) <- c("Subject","Activity",gsub("-|\\(|\\)|,","",features$V2))
names(main_dataset)
colnames(main_dataset) <- c("Subject","Activity",gsub("-|\\(|\\)|,","",features$V2))
head(main_dataset)
column_keywords <- c("Subject","Activity","mean","std")
sapply(keywords,grepl,features$V2)
sapply(column_keywords,grepl,features$V2)
sapply(column_keywords,grepl,features$V2,ignore.case=TRUE)
sapply(column_keywords,grepl,features$V2,ignore.case=TRUE)
sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)
test <- main_dataset[,sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)]
tapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)
sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)
lapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)
keep_columns <- sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)
keep_columns
sum(keep_columns[,])
rowSums(keep_columns)
test <- main_dataset[,rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))]
head(test)
names(test)
test
main_dataset
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
head(main_dataset)
head(test)
df[ , -which(names(df) %in% c("z","u"))]
test <- main_dataset
sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)
df[ , -which(names(df) %in% c("z","u"))]
rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))
features
names(test)
rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))
keep_names <- names(test) & rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))
if(rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))) test[,]
test[,rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))]
test
test2 <- if(rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))) test[,]
head(test2)
test2 <- test[,rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))]
head(test2)
test2
test[,rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))]
keep_columns
keep_columns <- rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))
keep_columns
test2 <- test[,keep_columns]
test2
test[,keep_columns]
test
head(test[,rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))])
head(test)
sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)
apply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)
sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)
rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))
rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))
keep_cols <- rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE))
as.logical(keep_cols)
logical_keep <- as.logical(rowSums(sapply(column_keywords,grepl,names(main_dataset),ignore.case=TRUE)))
head(test[,logical_keep])
test2 <- test[,logical_keep]
head(test2)
names(test2)
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
activitylabels_path <- "UCI\ HAR\ Dataset/activity_labels.txt"
features_path <- "UCI\ HAR\ Dataset/features.txt"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
testlabels_path <- "UCI\ HAR\ Dataset/test/y_test.txt"
testsubject_path <- "UCI\ HAR\ Dataset/test/subject_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
trainlabels_path <- "UCI\ HAR\ Dataset/train/y_train.txt"
trainsubject_path <- "UCI\ HAR\ Dataset/train/subject_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
activity_labels <- read.table(unz(temp, activitylabels_path))
features <- read.table(unz(temp, features_path))
test_dataset <- read.table(unz(temp, testdata_path))
test_labels <- read.table(unz(temp, testlabels_path))
test_subject <- read.table(unz(temp, testsubject_path))
train_dataset <- read.table(unz(temp, traindata_path))
train_labels <- read.table(unz(temp, trainlabels_path))
train_subject <- read.table(unz(temp, trainsubject_path))
unlink(temp)
main_dataset <- rbind(cbind(test_subject,test_labels,test_dataset),
cbind(train_subject,train_labels,train_dataset))
## Step 2 - To extract mean and standard deviation for each measurment, first
##          rename column names (subject + activity + features**) in order to scan
##          columns containing (mean or std)
##              ** removing invalid characters for variable names: - ( ) ,
##
##          And then only keep the first 2 columns + columns containing "mean" or "std"
colnames(main_dataset) <- c("Subject","Activity",gsub("-|\\(|\\)|,","",features$V2))
keep_keywords <- c("Subject", "Activity", "mean", "std")
keep_columns <- as.logical(rowSums(sapply(keep_keywords, grepl,
names(main_dataset), ignore.case=TRUE)))
new_main_dataset <- main_dataset[,keep_columns]
head(new_main_dataset)
new_main_dataset[,2]
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
activitylabels_path <- "UCI\ HAR\ Dataset/activity_labels.txt"
features_path <- "UCI\ HAR\ Dataset/features.txt"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
testlabels_path <- "UCI\ HAR\ Dataset/test/y_test.txt"
testsubject_path <- "UCI\ HAR\ Dataset/test/subject_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
trainlabels_path <- "UCI\ HAR\ Dataset/train/y_train.txt"
trainsubject_path <- "UCI\ HAR\ Dataset/train/subject_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
activity_labels <- read.table(unz(temp, activitylabels_path))
features <- read.table(unz(temp, features_path))
test_dataset <- read.table(unz(temp, testdata_path))
test_labels <- read.table(unz(temp, testlabels_path))
test_subject <- read.table(unz(temp, testsubject_path))
train_dataset <- read.table(unz(temp, traindata_path))
train_labels <- read.table(unz(temp, trainlabels_path))
train_subject <- read.table(unz(temp, trainsubject_path))
unlink(temp)
main_dataset <- rbind(cbind(test_subject,test_labels,test_dataset),
cbind(train_subject,train_labels,train_dataset))
## Step 2 - To extract mean and standard deviation for each measurment, first
##          rename column names (subject + activity + features**) in order to scan
##          columns containing (mean or std)
##              ** removing invalid characters for variable names: - ( ) ,
##
##          And then only keep the first 2 columns + columns containing "mean" or "std"
colnames(main_dataset) <- c("Subject","Activity",gsub("-|\\(|\\)|,","",features$V2))
keep_keywords <- c("Subject", "Activity", "mean", "std")
keep_columns <- as.logical(rowSums(sapply(keep_keywords, grepl,
names(main_dataset), ignore.case=TRUE)))
main_dataset[,keep_columns]
activity_labels
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
main_dataset <- main_dataset[,keep_columns]
## Step 3 - Replace numeric contents in the "Activity" column of main_dataset
##          with the corresponding activity form activity_labels
main_dataset$Activity <- activity_labels[main_dataset$Activity,2]
main_dataset[,2]
activity_labels
new_main_dataset[1,2], main_dataset[1,2]
new_main_dataset[1,2] main_dataset[1,2]
new_main_dataset[1,2]
main_dataset[1,2]
activity_labels
new_main_dataset[10,2]
main_dataset[10,2]
activity_labels
new_main_dataset[100,2]
main_dataset[100,2]
main_dataset <- new_main_dataset
main_dataset$Activity <- activity_labels[main_dataset$Activity,activity_labels$V2]
main_dataset$Activity <- activity_labels[main_dataset$Activity,V2]
main_dataset$Activity <- activity_labels[main_dataset$Activity,2]
main_dataset[,2]
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
names(main_dataset)
features
c("Subject","Activity",gsub("-|\\(|\\)|,","",features$V2))
c("Subject","Activity",features$V2))
c("Subject","Activity",features$V2)
keep_keywords <- c("Subject", "Activity", "mean", "std")
keep_columns <- as.logical(rowSums(sapply(keep_keywords, grepl,
names(main_dataset), ignore.case=TRUE)))
keep_keywords <- c("Subject", "Activity", "mean", "std")
keep_columns <- as.logical(rowSums(sapply(keep_keywords, grepl,
names(main_dataset), ignore.case=TRUE)))
main_dataset <- main_dataset[,keep_columns]
keep_keywords <- c("Subject", "Activity")
keep_columns <- as.logical(rowSums(sapply(keep_keywords, grepl,
+                                           names(main_dataset), ignore.case=TRUE)))
keep_columns <- as.logical(rowSums(sapply(keep_keywords, grepl,
names(main_dataset), ignore.case=TRUE)))
main_dataset <- main_dataset[,keep_columns]
main_dataset<-new_main_dataset
keep_keywords <- c("mean")
keep_columns <- as.logical(rowSums(sapply(keep_keywords, grepl,
names(main_dataset), ignore.case=TRUE)))
main_dataset <- main_dataset[,keep_columns]
source('~/Dropbox/Coursera/Data Science/03 - Getting and Cleaning Data/Assignments/Course Project/run_analysis.R')
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
activitylabels_path <- "UCI\ HAR\ Dataset/activity_labels.txt"
features_path <- "UCI\ HAR\ Dataset/features.txt"
testdata_path <- "UCI\ HAR\ Dataset/test/X_test.txt"
testlabels_path <- "UCI\ HAR\ Dataset/test/y_test.txt"
testsubject_path <- "UCI\ HAR\ Dataset/test/subject_test.txt"
traindata_path <- "UCI\ HAR\ Dataset/train/X_train.txt"
trainlabels_path <- "UCI\ HAR\ Dataset/train/y_train.txt"
trainsubject_path <- "UCI\ HAR\ Dataset/train/subject_train.txt"
temp <- tempfile()
download.file(fileURL, temp, method="curl")
activity_labels <- read.table(unz(temp, activitylabels_path))
features <- read.table(unz(temp, features_path))
test_dataset <- read.table(unz(temp, testdata_path))
test_labels <- read.table(unz(temp, testlabels_path))
test_subject <- read.table(unz(temp, testsubject_path))
train_dataset <- read.table(unz(temp, traindata_path))
train_labels <- read.table(unz(temp, trainlabels_path))
train_subject <- read.table(unz(temp, trainsubject_path))
unlink(temp)
main_dataset <- rbind(cbind(test_subject,test_labels,test_dataset),
cbind(train_subject,train_labels,train_dataset))
## Step 2 - To extract mean and standard deviation for each measurment, first
##          rename columns (subject + activity + features**) in order to scan
##          columns containing (mean or std)
##              ** removing invalid characters for variable names: - ( ) ,
##
##          And then only keep the first 2 columns + columns containing "mean" or "std"
colnames(main_dataset) <- c("Subject","Activity",gsub("-|\\(|\\)|,","",features$V2))
keep_keywords <- c("Subject", "Activity", "mean", "std")
keep_columns <- as.logical(rowSums(sapply(keep_keywords, grepl,
names(main_dataset), ignore.case=TRUE)))
main_dataset <- main_dataset[,keep_columns]
## Step 3 - Replace numeric contents in the "Activity" column of main_dataset
##          with the corresponding activity form activity_labels
main_dataset$Activity <- activity_labels[main_dataset$Activity,2]
